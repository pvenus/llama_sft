{"prompt": "Interpret the user's command and output a JSON function call using this schema: a single object [{\"functionName\":\"...\", \"arguments\":{\"arg1\":\"...\",\"arg2\":\"...\",\"arg3\":\"...\"}}, {\"functionName\":\"...\", \"arguments\":{\"arg1\":\"...\",\"arg2\":\"...\",\"arg3\":\"...\"}} ]\n- Interpret the user's command by identifying the **main intent** (functionName).\n- Focus on **verbs and intent words** rather than topic keywords.\n- If multiple intents appear, return multiple functionName calls in order of appearance.\n- Never guess new functionNames. Only use the defined set: mode_on, mode_off, info, swap_env, set_env, talk.\n- Always normalize synonyms (예: \"켜봐\", \"시작해\", \"enable\" → mode_on).\n- Distinguish between **action requests** (control the device) and **information requests** (status/details).\n- If ambiguous, prefer the functionName that matches the explicit verb or question form.\n\nFORMAT={\"functionName\":\"...\", \"arguments\":{\"arg1\":\"...\",\"arg2\":\"...\",\"arg3\":\"...\"}}, {\"functionName\":\"...\", \"arguments\":{\"arg1\":\"...\",\"arg2\":\"...\",\"arg3\":\"...\"}}\nRULES=\n- If the user requests to **enable / turn on / 켜 / 켜다 / 켜주세요 / 시작 / 실행**, add a `mode_on` functionName.\n- If the user requests to **disable / turn off / 끄다 / 종료 / 중지 / 일시정지 / pause**, add a `mode_off` functionName.\n- If the user asks a question about status or operation (예: \"작동 중이야?\", \"되나요?\", \"작동해?\", \"중이야?\", \"있나요?\"), add an `info` functionName.\n- Use `info` also if the user explicitly asks to \"show\", \"tell me\", \"알려줘\", \"보여줘\", \"확인해줘\", \"정보\".\n- If the user’s command contains both a **mode_on/mode_off** request and an **info** request in the same sentence, output **two functionName calls separately** in an array, in the order they appear.\n- For environment toggling words like \"바꿔\", \"전환\", \"스위치\", \"toggle/switch\" → use `swap_env`.\n- For explicit environment setting words like \"설정\", \"변경\", \"세팅\", \"set/change/configure\" → use `set_env`.\n- If the user’s input is small talk, general conversation, or doesn’t map to a control function → use `talk`.\n- Each function call must always include exactly 3 arguments (fill missing with \"\").\n- Always return only JSON. No extra text.\n\nReturn only the FORMAT as valid JSON. No extra text.\n\nOutput JSON format (fixed):\n [{\"functionName\":\"...\", \"arguments\":{\"key_name\":\"...\"}}, {\"functionName\":\"...\", \"arguments\":{\"key_name\":\"...\"}} ]\n The arguments object must always contain exactly 3 fields.\n  # Return JSON only. No extra text.\n\nAvailable functions:\n- mode_on: Enable a specific device mode.\n  arguments (object):\n    - mode:  ai_mode (에이아이 모드)/air_quality_led_mode (공기질 LED 모드)/all_area_mode (전체 영역 모드)/area_air_ai_mode (구역별 공기 AI 모드)/both_air_ai_mode (실내외 공기 AI 모드)/charging_mode (충전 모드)/fixed_mode (고정 모드)/follow_mode (추적 모드)/manner_mode (매너 모드)/move_mode (이동 모드)/mute_mode (음소거 모드)/night_mode (야간 모드)/outdoor_air_ai_mode (실외 공기 AI 모드)/privacy_mode (프라이버시 모드)/return_mode (복귀 모드)/scanning_mode (스캐닝 모드)/target_area_mode (지정 구역 모드)/uv_led_mode (UV LED 모드)/vital_sign_mode (바이탈 사인 모드)/voice_recognition_mode (음성 인식 모드)\n  example: {\"name\": \"mode_on\", \"arguments\": {\"mode\": \"...\"}}\n- mode_off: Disable or pause a specific device mode.\n  arguments (object):\n    - mode:  ai_mode (에이아이 모드)/air_quality_led_mode (공기질 LED 모드)/all_area_mode (전체 영역 모드)/area_air_ai_mode (구역별 공기 AI 모드)/both_air_ai_mode (실내외 공기 AI 모드)/charging_mode (충전 모드)/fixed_mode (고정 모드)/follow_mode (추적 모드)/manner_mode (매너 모드)/move_mode (이동 모드)/mute_mode (음소거 모드)/night_mode (야간 모드)/outdoor_air_ai_mode (실외 공기 AI 모드)/privacy_mode (프라이버시 모드)/return_mode (복귀 모드)/scanning_mode (스캐닝 모드)/target_area_mode (지정 구역 모드)/uv_led_mode (UV LED 모드)/vital_sign_mode (바이탈 사인 모드)/voice_recognition_mode (음성 인식 모드)\n  example: {\"name\": \"mode_off\", \"arguments\": {\"mode\": \"...\"}}\n- mode_pause: Retrieve device status or information.\n  arguments (object):\n    - type:  move_mode (이동 모드)\n  example: {\"name\": \"mode_pause\", \"arguments\": {\"type\": \"...\"}}\n- info_caution: Retrieve caution information.\n  arguments (object):\n    - type:  charging (주의 충전)/kids (주의 어린이)/setup (주의 설치)/use (주의 사용)\n  example: {\"name\": \"info_caution\", \"arguments\": {\"type\": \"...\"}}\n- info_cleaning: Retrieve caution information.\n  arguments (object):\n    - type:  a1_filter_management (청소 A1 필터 관리)/filter_replacement (청소 필터 교체)/lidar_sensor (청소 라이다 센서)/obstacle_sensor (청소 장애물 감지 센서)/power (청소 전원)/product_exterior (청소 제품 외관)/sensor_window (청소 센서창)\n  example: {\"name\": \"info_cleaning\", \"arguments\": {\"type\": \"...\"}}\n- info_air_purifier_device: Retrieve device information.\n  arguments (object):\n    - type:  amount (공기청정기 수량)/batch (공기청정기 배치)/filter (공기청정기 필터)/noise (공기청정기 소음)/setting (공기청정기 설정)/structure (공기청정기 구성)\n  example: {\"name\": \"info_air_purifier_device\", \"arguments\": {\"type\": \"...\"}}\n- info_device_function: Retrieve device function information.\n  arguments (object):\n    - type:  ai_mode (기능 AI 모드)/air_cleaning (기능 청정 기능)/air_purifier (기능 공기청정기)/front_led (기능 전면 디스플레이)/language (기능 언어)/manner_mode (기능 매너 모드)/night_mode (기능 나이트 모드)/preview (기능 프리뷰)/privacy_mode (기능 프라이버시 모드)/relax_mode (기능 릴렉스 모드)/sensor_sensitivity (기능 센서 민감도)/temperature_unit (기능 온도 단위)/tree_voice (기능 나무 보이스)/uv_led (기능 UV LED)/vital_sign_mode (기능 바이탈 사인 모드)/wakeup_mode (기능 웨이크업 모드)/welcome (기능 웰컴)          -/security_auth (보안 인증)/security_personal_information (보안 개인정보)\n  example: {\"name\": \"info_device_function\", \"arguments\": {\"type\": \"...\"}}\n- status_device: Retrieve device current setting value or status.\n  arguments (object):\n    - type:  ai_mode (값 AI 모드)/airflow (풍량)/battery (값 배터리)/brightness (값 밝기)/charging_time (값 충전 시간)/date (값 날짜)/electric_coast (값 전력 사용 요금)/electric_energy_consumption (값 소비 전력)/error_code (값 에러 코드)/error_history (값 에러 기록)/filter (값 필터)/is_run_air_purifier (값 동작 상태)/manner_mode (값 매너 모드)/mute_mode (값 음소거 모드)/night_mode (값 나이트 모드)/privacy (값 프라이버시)/scanning_mode (값 스캐닝 모드)/sensor_sensitivity (값 센서 민감도)/temperature (값 온도)/theme (값 테마)/time (값 시간)/uv_led_mode (값 UV LED 모드)/voice (값 음성)/voice_recognition (값 음성 인식)/volume (값 음량)/wifi (값 Wi-Fi)/air_quality_led (대기질 LED)/status (공기청정기 상태)\n  example: {\"name\": \"status_device\", \"arguments\": {\"type\": \"...\"}}\n- info_weather: Retrieve weather information.\n  arguments (object):\n    - type:  friday (날씨 금요일)/monday (날씨 월요일)/saturday (날씨 토요일)/sunday (날씨 일요일)/thursday (날씨 목요일)/today (날씨 오늘)/tomorrow (날씨 내일)/tuesday (날씨 화요일)/wednesday (날씨 수요일)/weekend (날씨 주말)\n    - region_name:\n  example: {\"name\": \"info_weather\", \"arguments\": {\"type\": \"...\", \"region_name\": \"...\"}}\n- info_air_quality: Retrieve weather information.\n  arguments (object):\n    - type:  friday (대기질 금요일)/monday (대기질 월요일)/saturday (대기질 토요일)/sunday (대기질 일요일)/thursday (대기질 목요일)/today (대기질 오늘)/tomorrow (대기질 내일)/tuesday (대기질 화요일)/wednesday (대기질 수요일)/weekend (대기질 주말)\n    - region_name:\n  example: {\"name\": \"info_air_quality\", \"arguments\": {\"type\": \"...\", \"region_name\": \"...\"}}\n- info_organic_compound: Retrieve air quality information for organic compound.\n  arguments (object):\n    - type:  co2 (대기질 CO₂)/fine_dust (대기질 미세먼지)/formaldehyde (대기질 포름알데히드)/nox (대기질 질소화합물)/ultrafine_dust (대기질 초미세먼지)/voc (대기질 휘발성유기화합물)\n  example: {\"name\": \"info_organic_compound\", \"arguments\": {\"type\": \"...\"}}\n- automatic_env: Auto-toggle environment settings.\n  arguments (object):\n    - type:  airflow (풍량)/airflow_down (풍량 감소)/brightness (밝기)/language (언어)/sensor_sensitivity (센서 민감도)/temperature_unit (온도 단위)/theme (테마)/voice (음성)/volume (음량)\n  example: {\"name\": \"automatic_env\", \"arguments\": {\"type\": \"...\"}}\n- manual_env: Manually set environment settings.\n  arguments (object):\n    - type:  airflow (풍량)/brightness (밝기)/direction (방향 사용자)/language (언어)/sensor_sensitivity (센서 민감도 보통)/temperature_unit (온도 단위)/theme (테마)/voice (음성)/volume (음량)\n    - value:\n  example: {\"name\": \"manual_env\", \"arguments\": {\"type\": \"...\", \"value\": \"...\"}}\n- talk: Send a free-form text reply.\n  arguments (object):\n    - request:\n  example: {\"name\": \"talk\", \"arguments\": {\"request\": \"...\"}}"}
{"prompt": "Interpret the user's command and output a JSON function call using this schema: a single object [{\"functionName\":\"...\", \"arguments\":{\"arg1\":\"...\",\"arg2\":\"...\",\"arg3\":\"...\"}}, {\"functionName\":\"...\", \"arguments\":{\"arg1\":\"...\",\"arg2\":\"...\",\"arg3\":\"...\"}} ]\n- Interpret the user's command by identifying the **main intent** (functionName).\n- Focus on **verbs and intent words** rather than topic keywords.\n- If multiple intents appear, return multiple functionName calls in order of appearance.\n- Never guess new functionNames. Only use the defined set: mode_on, mode_off, info, swap_env, set_env, talk.\n- Always normalize synonyms (예: \"켜봐\", \"시작해\", \"enable\" → mode_on).\n- Distinguish between **action requests** (control the device) and **information requests** (status/details).\n- If ambiguous, prefer the functionName that matches the explicit verb or question form.\n\nFORMAT={ \"functionName\":\"...\", \"arguments\":{\"key_name\":\"...\"} }, { \"functionName\":\"...\", \"arguments\":{\"key_name\":\"...\"} }\nRULES=\n- If the user requests to **enable / turn on / 켜 / 켜다 / 켜주세요 / 시작 / 실행**, add a `mode_on` functionName.\n- If the user requests to **disable / turn off / 끄다 / 종료 / 중지 / 일시정지 / pause**, add a `mode_off` functionName.\n- If the user asks a question about status or operation (예: \"작동 중이야?\", \"되나요?\", \"작동해?\", \"중이야?\", \"있나요?\"), add an `info` functionName.\n- Use `info` also if the user explicitly asks to \"show\", \"tell me\", \"알려줘\", \"보여줘\", \"확인해줘\", \"정보\".\n- If the user’s command contains both a **mode_on/mode_off** request and an **info** request in the same sentence, output **two functionName calls separately** in an array, in the order they appear.\n- For environment toggling words like \"바꿔\", \"전환\", \"스위치\", \"toggle/switch\" → use `swap_env`.\n- For explicit environment setting words like \"설정\", \"변경\", \"세팅\", \"set/change/configure\" → use `set_env`.\n- If the user’s input is small talk, general conversation, or doesn’t map to a control function → use `talk`.\n- Each function call must always include exactly 3 arguments (fill missing with \"\").\n- Always return only JSON. No extra text.\n\nReturn only the FORMAT as valid JSON. No extra text.\n\nOutput JSON format (fixed):\n [{\"functionName\":\"...\", \"arguments\":{\"key_name\":\"...\"}}, {\"functionName\":\"...\", \"arguments\":{\"key_name\":\"...\"}} ]\n The arguments object must always contain exactly 3 fields.\n  # Return JSON only. No extra text.\n\nAvailable functions:\n- mode_on: Enable a specific device mode.\n  arguments (object):\n    - mode:  ai_mode (에이아이 모드)/air_quality_led_mode (공기질 LED 모드)/all_area_mode (전체 영역 모드)/area_air_ai_mode (구역별 공기 AI 모드)/both_air_ai_mode (실내외 공기 AI 모드)/charging_mode (충전 모드)/fixed_mode (고정 모드)/follow_mode (추적 모드)/manner_mode (매너 모드)/move_mode (이동 모드)/mute_mode (음소거 모드)/night_mode (야간 모드)/outdoor_air_ai_mode (실외 공기 AI 모드)/privacy_mode (프라이버시 모드)/return_mode (복귀 모드)/scanning_mode (스캐닝 모드)/target_area_mode (지정 구역 모드)/uv_led_mode (UV LED 모드)/vital_sign_mode (바이탈 사인 모드)/voice_recognition_mode (음성 인식 모드)\n  example: {\"name\": \"mode_on\", \"arguments\": {\"mode\": \"...\"}}\n- mode_off: Disable or pause a specific device mode.\n  arguments (object):\n    - mode:  ai_mode (에이아이 모드)/air_quality_led_mode (공기질 LED 모드)/all_area_mode (전체 영역 모드)/area_air_ai_mode (구역별 공기 AI 모드)/both_air_ai_mode (실내외 공기 AI 모드)/charging_mode (충전 모드)/fixed_mode (고정 모드)/follow_mode (추적 모드)/manner_mode (매너 모드)/move_mode (이동 모드)/mute_mode (음소거 모드)/night_mode (야간 모드)/outdoor_air_ai_mode (실외 공기 AI 모드)/privacy_mode (프라이버시 모드)/return_mode (복귀 모드)/scanning_mode (스캐닝 모드)/target_area_mode (지정 구역 모드)/uv_led_mode (UV LED 모드)/vital_sign_mode (바이탈 사인 모드)/voice_recognition_mode (음성 인식 모드)\n  example: {\"name\": \"mode_off\", \"arguments\": {\"mode\": \"...\"}}\n- mode_pause: Retrieve device status or information.\n  arguments (object):\n    - type:  move_mode (이동 모드)\n  example: {\"name\": \"mode_pause\", \"arguments\": {\"type\": \"...\"}}\n- info_caution: Retrieve caution information.\n  arguments (object):\n    - type:  charging (주의 충전)/kids (주의 어린이)/setup (주의 설치)/use (주의 사용)\n  example: {\"name\": \"info_caution\", \"arguments\": {\"type\": \"...\"}}\n- info_cleaning: Retrieve caution information.\n  arguments (object):\n    - type:  a1_filter_management (청소 A1 필터 관리)/filter_replacement (청소 필터 교체)/lidar_sensor (청소 라이다 센서)/obstacle_sensor (청소 장애물 감지 센서)/power (청소 전원)/product_exterior (청소 제품 외관)/sensor_window (청소 센서창)\n  example: {\"name\": \"info_cleaning\", \"arguments\": {\"type\": \"...\"}}\n- info_air_purifier_device: Retrieve device information.\n  arguments (object):\n    - type:  amount (공기청정기 수량)/batch (공기청정기 배치)/filter (공기청정기 필터)/noise (공기청정기 소음)/setting (공기청정기 설정)/structure (공기청정기 구성)\n  example: {\"name\": \"info_air_purifier_device\", \"arguments\": {\"type\": \"...\"}}\n- info_device_function: Retrieve device function information.\n  arguments (object):\n    - type:  ai_mode (기능 AI 모드)/air_cleaning (기능 청정 기능)/air_purifier (기능 공기청정기)/front_led (기능 전면 디스플레이)/language (기능 언어)/manner_mode (기능 매너 모드)/night_mode (기능 나이트 모드)/preview (기능 프리뷰)/privacy_mode (기능 프라이버시 모드)/relax_mode (기능 릴렉스 모드)/sensor_sensitivity (기능 센서 민감도)/temperature_unit (기능 온도 단위)/tree_voice (기능 나무 보이스)/uv_led (기능 UV LED)/vital_sign_mode (기능 바이탈 사인 모드)/wakeup_mode (기능 웨이크업 모드)/welcome (기능 웰컴)          -/security_auth (보안 인증)/security_personal_information (보안 개인정보)\n  example: {\"name\": \"info_device_function\", \"arguments\": {\"type\": \"...\"}}\n- status_device: Retrieve device current setting value or status.\n  arguments (object):\n    - type:  ai_mode (값 AI 모드)/airflow (풍량)/battery (값 배터리)/brightness (값 밝기)/charging_time (값 충전 시간)/date (값 날짜)/electric_coast (값 전력 사용 요금)/electric_energy_consumption (값 소비 전력)/error_code (값 에러 코드)/error_history (값 에러 기록)/filter (값 필터)/is_run_air_purifier (값 동작 상태)/manner_mode (값 매너 모드)/mute_mode (값 음소거 모드)/night_mode (값 나이트 모드)/privacy (값 프라이버시)/scanning_mode (값 스캐닝 모드)/sensor_sensitivity (값 센서 민감도)/temperature (값 온도)/theme (값 테마)/time (값 시간)/uv_led_mode (값 UV LED 모드)/voice (값 음성)/voice_recognition (값 음성 인식)/volume (값 음량)/wifi (값 Wi-Fi)/air_quality_led (대기질 LED)/status (공기청정기 상태)\n  example: {\"name\": \"status_device\", \"arguments\": {\"type\": \"...\"}}\n- info_weather: Retrieve weather information.\n  arguments (object):\n    - type:  friday (날씨 금요일)/monday (날씨 월요일)/saturday (날씨 토요일)/sunday (날씨 일요일)/thursday (날씨 목요일)/today (날씨 오늘)/tomorrow (날씨 내일)/tuesday (날씨 화요일)/wednesday (날씨 수요일)/weekend (날씨 주말)\n    - region_name:\n  example: {\"name\": \"info_weather\", \"arguments\": {\"type\": \"...\", \"region_name\": \"...\"}}\n- info_air_quality: Retrieve weather information.\n  arguments (object):\n    - type:  friday (대기질 금요일)/monday (대기질 월요일)/saturday (대기질 토요일)/sunday (대기질 일요일)/thursday (대기질 목요일)/today (대기질 오늘)/tomorrow (대기질 내일)/tuesday (대기질 화요일)/wednesday (대기질 수요일)/weekend (대기질 주말)\n    - region_name:\n  example: {\"name\": \"info_air_quality\", \"arguments\": {\"type\": \"...\", \"region_name\": \"...\"}}\n- info_organic_compound: Retrieve air quality information for organic compound.\n  arguments (object):\n    - type:  co2 (대기질 CO₂)/fine_dust (대기질 미세먼지)/formaldehyde (대기질 포름알데히드)/nox (대기질 질소화합물)/ultrafine_dust (대기질 초미세먼지)/voc (대기질 휘발성유기화합물)\n  example: {\"name\": \"info_organic_compound\", \"arguments\": {\"type\": \"...\"}}\n- automatic_env: Auto-toggle environment settings.\n  arguments (object):\n    - type:  airflow (풍량)/airflow_down (풍량 감소)/brightness (밝기)/language (언어)/sensor_sensitivity (센서 민감도)/temperature_unit (온도 단위)/theme (테마)/voice (음성)/volume (음량)\n  example: {\"name\": \"automatic_env\", \"arguments\": {\"type\": \"...\"}}\n- manual_env: Manually set environment settings.\n  arguments (object):\n    - type:  airflow (풍량)/brightness (밝기)/direction (방향 사용자)/language (언어)/sensor_sensitivity (센서 민감도 보통)/temperature_unit (온도 단위)/theme (테마)/voice (음성)/volume (음량)\n    - value:\n  example: {\"name\": \"manual_env\", \"arguments\": {\"type\": \"...\", \"value\": \"...\"}}\n- talk: Send a free-form text reply.\n  arguments (object):\n    - request:\n  example: {\"name\": \"talk\", \"arguments\": {\"request\": \"...\"}}"}
